package(
    default_visibility = ["//:__subpackages__"],
)

filegroup(
    name = "idcache_c",
    srcs = ["idcache.c"],
)

filegroup(
    name = "randutils_c",
    srcs = ["randutils.c"],
)

filegroup(
    name = "md5_c",
    srcs = ["md5.c"],
)

filegroup(
    name = "sha1_c",
    srcs = ["sha1.c"],
)

filegroup(
    name = "strutils_c",
    srcs = ["strutils.c"],
)

filegroup(
    name = "strv_c",
    srcs = ["strv.c"],
)

filegroup(
    name = "pager_c",
    srcs = ["pager.c"],
)

filegroup(
    name = "monotonic_c",
    srcs = ["monotonic.c"],
)

filegroup(
    name = "timer_c",
    srcs = ["timer.c"],
)

filegroup(
    name = "swapprober_c",
    srcs = ["swapprober.c"],
)

filegroup(
    name = "pty_session_c",
    srcs = ["pty-session.c"],
)

filegroup(
    name = "ismounted_c",
    srcs = ["ismounted.c"],
)

filegroup(
    name = "exec_shell_c",
    srcs = ["exec_shell.c"],
)

filegroup(
    name = "fileeq_c",
    srcs = ["fileeq.c"],
)

cc_library(
    name = "common",
    srcs = [
               "blkdev.c",
               "buffer.c",
               "c_strtod.c",
               "canonicalize.c",
               "color-names.c",
               "crc32.c",
               "crc32c.c",
               "crc64.c",
               "encode.c",
               "env.c",
               "fileutils.c",
               "jsonwrt.c",
               "mangle.c",
               "match.c",
               "mbsalign.c",
               "mbsedit.c",
               "pwdutils.c",
               "sha256.c",
               "signames.c",
               "timeutils.c",
               "ttyutils.c",
               "xxhash.c",
               ":idcache_c",
               ":md5_c",
               ":pager_c",
               ":randutils_c",
               ":sha1_c",
               ":strutils_c",
               ":strv_c",
           ] + select({
               "@platforms//os:linux": [
                   "caputils.c",
                   "linux_version.c",
                   "loopdev.c",
               ],
               "//conditions:default": [],
           }) +
           select(
               {
                   # TODO: Feature detection for Bazel, for now just match the config generated by automake
                   "//config:x86_64-linux": [
                       "cpuset.c",
                       "langinfo.c",
                       "path.c",
                       "procfs.c",
                       "sysfs.c",
                   ],
               },
           ),
    deps = ["//:includes"],
)
